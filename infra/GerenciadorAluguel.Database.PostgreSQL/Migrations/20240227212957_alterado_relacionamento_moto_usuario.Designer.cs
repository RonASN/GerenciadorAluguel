// <auto-generated />
using System;
using GerenciadorAluguel.Database.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GerenciadorAluguel.Database.PostgreSQL.Migrations
{
    [DbContext(typeof(GerenciadorAluguelDbContext))]
    [Migration("20240227212957_alterado_relacionamento_moto_usuario")]
    partial class alteradorelacionamentomotousuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Aluguel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PrevisaoTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("idUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("idUsuario")
                        .IsUnique();

                    b.ToTable("Aluguel");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Entregador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("CategoriaCnh")
                        .HasColumnType("integer");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagemCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroCnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("idUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("idUsuario")
                        .IsUnique();

                    b.ToTable("Entregador");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("idUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("idUsuario");

                    b.ToTable("Moto");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer");

                    b.Property<double>("ValorCorrida")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("idUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("idUsuario");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Aluguel", b =>
                {
                    b.HasOne("GerenciadorAluguel.Domain.Models.Usuario", "Usuario")
                        .WithOne("Aluguel")
                        .HasForeignKey("GerenciadorAluguel.Domain.Models.Aluguel", "idUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Entregador", b =>
                {
                    b.HasOne("GerenciadorAluguel.Domain.Models.Usuario", "Usuario")
                        .WithOne("DadosEntregador")
                        .HasForeignKey("GerenciadorAluguel.Domain.Models.Entregador", "idUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Moto", b =>
                {
                    b.HasOne("GerenciadorAluguel.Domain.Models.Usuario", "Usuario")
                        .WithMany("Moto")
                        .HasForeignKey("idUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Pedido", b =>
                {
                    b.HasOne("GerenciadorAluguel.Domain.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("idUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GerenciadorAluguel.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Aluguel");

                    b.Navigation("DadosEntregador");

                    b.Navigation("Moto");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
